compare[compare$diff2==100,]
d_small <- compare %>% subset(diff2 == 100 & poly_area < 4)
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
nrow(dsmall)
nrow(d_small)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
compare[compare$diff==2,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 3,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
compare[compare$diff == 4,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
c1$source <- 'r1'
p1 <- ggplot(c1,aes(x=diff)) +
geom_density(aes(group=source,color=source),alpha=0.3)
p1
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
compare$diff <- abs(compare$polygon_area - compare$raster_area)
compare$diff2 <- compare$diff/compare$polygon_area*100
nrow(compare)
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
c1 <- count(compare,diff)
head(c1)
compare[compare$feature_id==1899638,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
compare[compare$feature_id==1899638,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 5 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
compare <- left_join(base_vri_area,raster_area)
#round the polygon_area and cat to integer
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
# remove the NULL on the raster side
# these are expected
raster_null <- compare[is.na(compare$raster_area),]
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area difference as percentage of vri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 2
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 3,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# where area is large and % diff < 5
raster_equal <- compare[compare$polygon_area > 100 | compare$diff2 < 5,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 5% difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
head(compare)
library(sf)
library(terra)
row <- 15744
col <- 17216
max_no <- row * col
ProvRast <- rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
test2<-ProvRast
test2[100]<-17840065
test2[!is.na(test2[])]
test2<-ProvRast
test2[100]<-17840065
freq(test2)
row <- 15744
col <- 17216
max_no <- row * col
ProvRast <- terra::rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
ProvRast2<-raster::raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs ='epsg:3005',
#                crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
ProvRast2
terra::crs(ProvRast2) <- 'epsg:3005'
ProvRast2<-raster::raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs ='epsg:3005',
#                crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = 0)
ProvRast2<-raster::raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
terra::crs ='epsg:3005',
#                crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = 0)
ProvRast <- terra::rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
ProvRast2<-raster::raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
#                 terra::crs ='epsg:3005',
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
terra::freq(ProvRast)
ProvRast
test1<-ProvRast
terra::freq(test1)
test1
test1[5]
test1[99]
test1[100]<-17840065
test1[!is.na(test1[])]
library(raster)
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
test1<-ProvRast2
test1[100]<-17840065
freq(test1)
writeRaster(test1, file="c:/data/test1.tif", overwrite=TRUE)
test2<-raster('C:/data/test2.tif')
test2<-raster('C:/data/test1.tif')
freq(test2)
library(raster)
ProvRast<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
ProvRast
test2<-ProvRast
test2[100]<-17840065
freq(test2)
test2[!is.na(test2[])]
writeRaster(test2, file="c:/data/test2.tif", overwrite=TRUE)
test<-raster('C:/data/test2.tif')
test[!is.na(test[])]
freq(test)
crs(test2)
crs(test)
t1 <- paste0(substr(getwd(),1,1),':/data/data_projects/VRI_Rasterization/method1.tif')
test3 <- raster(t1)
test3
test4 <- terra::rast(t1)
test4
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
#crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
crs(ProvRast2)
packageVersion(raster)
getClass("CRS")
rgdal::rgdal_extSoftVersion()
install.packages("tiff")
t1 <- tiff::readTIFF("c:/data/test1.tif")
class(t1)
head(tiff)
head(t1)
class(t1)
t1[100]
t1[99]
t1 <- tiff::readTIFF("c:/data/test1.tif",payload=FALSE)
t1
t1 <- tiff::readTIFF("c:/data/test1.tif",payload=FALSE,info=TRUE)
t1
rgdal::rgdal_extSoftVersion()
t1 <- paste0(substr(getwd(),1,1),':/data/data_projects/VRI_Rasterization/method1.tif')
r1 <- terra::rast(t1)
t1
r1
r2 <- raster::raster(t1)
r2
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
#crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
test1<-ProvRast2
test1[100]<-17840064
freq(test1)
writeRaster(test1, file="c:/data/test1.tif", overwrite=TRUE)
t1 <- tiff::readTIFF("c:/data/test1.tif",payload=FALSE,info=TRUE)
test2<-raster('C:/data/test1.tif')
freq(test2)
test1<-ProvRast2
test1[100]<-17840065
freq(test1)
test1[!is.na(test1[])]
writeRaster(test1, file="c:/data/test1.tif", overwrite=TRUE)
t1 <- tiff::readTIFF("c:/data/test1.tif",payload=FALSE,info=TRUE)
test2<-raster('C:/data/test1.tif')
freq(test2)
library(raster)
library(terra)
row <- 15744
col <- 17216
max_no <- row * col
# terra
ProvRast <- rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
# raster
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
ProvRast
ProvRast2
t1  <- ProvRast
t1[100]<-17840065
freq(t1)
t2<-ProvRast2
t2[100]<-17840065
freq(t2)
writeRaster(t1, file="c:/data/test1.tif", overwrite=TRUE)
writeRaster(t2, file="c:/data/test2.tif", overwrite=TRUE)
f1 <- tiff::readTIFF("c:/data/test1.tif",payload=FALSE,info=TRUE)
f2 <- tiff::readTIFF("c:/data/test2.tif",payload=FALSE,info=TRUE)
test1<-rast('C:/data/test1.tif')
test2<-raster('C:/data/test2.tif')
test1
test2
freq(test1)
freq(test2)
library(raster)
library(terra)
row <- 15744
col <- 17216
max_no <- row * col
# terra
ProvRast <- rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
t1  <- ProvRast
t1[100]<-17840065
freq(t1)
# raster
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
t2<-ProvRast2
t2[100]<-17840065
freq(t2)
writeRaster(t1, file="c:/data/test1.tif", overwrite=TRUE)
writeRaster(t2, file="c:/data/test2.tif", overwrite=TRUE)
test1<-rast('C:/data/test1.tif')
test2<-raster('C:/data/test2.tif')
freq(test1)
test1
freq(test2)
test2
identical(test1,test2)
library(raster)
library(terra)
row <- 15744
col <- 17216
max_no <- row * col
# terra
ProvRast <- rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
t1  <- ProvRast
t1[100]<-17840065
freq(t1)
# raster
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
resolution = c(100,100), vals = NA)
t2<-ProvRast2
t2[100]<-17840065
freq(t2)
writeRaster(t1, file="c:/data/test1.tif", overwrite=TRUE)
writeRaster(t2, file="c:/data/test2.tif", overwrite=TRUE)
test1<-rast('C:/data/test1.tif')
test2<-raster('C:/data/test2.tif')
freq(test1)
test1
freq(test2)
test2
identical(test1,test2)
class(test1)
class(test2)
t3 <- raster(test1)
class(t3)
identical(t3,test2)
`{r}
library(raster)
library(terra)
library(raster)
library(terra)
library(raster)
library(terra)
test1<-rast('C:/data/test1.tif')
test2<-raster('C:/data/test2.tif')
test1[17840065]
test1[17840064]
freq(test1)
test2[17840064]
test2[17840065]
library(raster)
library(terra)
row <- 15744
col <- 17216
max_no <- row * col
# terra
ProvRast <- rast(nrows = row, ncols = col,
xmin = 159587.5, xmax = 1881187.5,
ymin = 173787.5, ymax = 1748187.5,
crs='epsg:3005',
resolution = c(100, 100),
vals = NA )
t1  <- ProvRast
t1[100]<-17840065
freq(t1)
t1[!is.an(t1)]
t1[!is.na(t1)]
# raster
ProvRast2<-raster(nrows=15744, ncols=17216, xmn=159587.5, xmx=1881187.5,
ymn=173787.5, ymx=1748187.5,
#crs="+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0",
crs= "+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs",
resolution = c(100,100), vals = NA)
t2<-ProvRast2
t2[100]<-17840065
freq(t2)
t2[!is.na(t2)]
writeRaster(t1, file="c:/data/test1.tif", overwrite=TRUE)
writeRaster(t2, file="c:/data/test2.tif", overwrite=TRUE)
test1 <- rast('C:/data/test1.tif')
test2 <- raster('C:/data/test2.tif')
crs(test1)
crs(test2)
freq(test1)
test1[!is.na(test1)]
test1
freq(test2)
test2[!is.na(test2)]
test2
crs(ProvRast)
dataType(t1)
dataType(t2)
writeRaster(t1, file="c:/data/test1.tif", datatype = 'INT4U', overwrite=TRUE)
writeRaster(t2, file="c:/data/test2.tif", datatype = 'INT4U', overwrite=TRUE)
test1 <- rast('C:/data/test1.tif')
test2 <- raster('C:/data/test2.tif')
freq(test1)
test1
freq(test2)
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
tif_method5 <- 'D:/data/data_projects/VRI_Rasterization/fasterize2.tif'
r1 <- terra::rast(tif_method1)
r5 <- terra::rast(tif_method5)
crs(r1)
crs(r5)
c1 <- abs(r1 - r5)
c1[c1 == 1] <- 1
c1[c1 > 1 ] <- 2
f4 <- terra::freq(c1)
f4
lst <- list(r1,r5)
raster_brick <-terra::rast(lst)
tif_brick <- 'D:/data/data_projects/VRI_Rasterization/tif_brick.tif'
terra::writeRaster(raster_brick, tif_brick, datatype='INT4U', overwrite=TRUE)
terra::writeRaster(raster_brick, tif_brick, datatype='INT4U', overwrite=TRUE)
tif_compare <- 'D:/data/data_projects/VRI_Rasterization/tif_brick.tif'
tif_compc5
c5
tif_compare <- 'D:/data/data_projects/VRI_Rasterization/tif_brick.tif'
c1
terra::writeRaster(c1,tif_compare,datatype='INT4U')
tif_compare <- 'D:/data/data_projects/VRI_Rasterization/tif_diff.tif'
terra::writeRaster(c1,tif_compare,datatype='INT4U',overwrite=TRUE)
r5 <- terra::rast(tif_method5)
# force projection
terra::crs(r5) <- 'epsg:3005'
# use absolutes
c1 <- abs(r1 - r5)
# where the difference is 1 assign 2
c1[c1 != 0] <- 1
f4 <- terra::freq(c1)
f4
r1
r5
identical(r1,r5)
getwd()
f1
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
tif_method2 <- 'D:/data/data_projects/VRI_Rasterization/method2.tif'
tif_method3 <- 'D:/data/data_projects/VRI_Rasterization/method3.tif'
tif_method4 <- 'D:/data/data_projects/VRI_Rasterization/method4.tif'
tif_method5 <- 'D:/data/data_projects/VRI_Rasterization/fasterize2.tif'
# read each raster set and compare
# if the diff is not zero, set it to 1
# this will show where pixel values are different
r1 <- terra::rast(tif_method1)
r2 <- terra::rast(tif_method2)
c1 <- r1 - r2
c1[c1 != 0] <- 1
f1 <- terra::freq(c1)
class(f1)
f1
f1[1]
f1[,1]
f1 <- as.data.frame
f1
r2 <- terra::rast(tif_method2)
c1 <- r1 - r2
c1[c1 != 0] <- 1
f1 <- terra::freq(c1)
f1
f1 <- as.data.frame(f1)
f1
f1 <- f1[,2:3]
f1
