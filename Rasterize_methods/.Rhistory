'-ot', 'UInt32 ',
'-l', spatial_table,
'-a', 'FEATURE_ID' ,
'-a_srs','EPSG:3005',
'-a_nodata', '-99',
'-co','COMPRESS=LZW',src,dest))
# point to the EXE
gdal_rasterize <- 'C:/Program Files/GDAL/gdal_rasterize.exe'
system2(gdal_rasterize,args=cmd,wait=TRUE,stderr = TRUE)
cmd
src
quote(src)
a <- quote(src)
a
a <- shQuote(src)
a
src <- shQuote("PG:dbname='msyt' user='postgres'")
src
src <- shQuote("PG:dbname='msyt' user='postgres'")
spatial_table <- 'msyt_2022.veg_comp_spatial'
dest <- paste0(substr(getwd(),1,1),':/data/data_projects/VRI_Rasterization/method4.tif')
cmd <- paste0(c('-tr','100',' 100',
'-te','159587.5 ','173787.5 ','1881187.5 ','1748187.5',
'-ot', 'UInt32 ',
'-l', spatial_table,
'-a', 'FEATURE_ID' ,
'-a_srs','EPSG:3005',
'-a_nodata', '-99',
'-co','COMPRESS=LZW',src,dest))
gdal_rasterize <- 'C:/Program Files/GDAL/gdal_rasterize.exe'
system2(gdal_rasterize,args=cmd,wait=TRUE,stderr = TRUE)
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
tif_method2 <- 'D:/data/data_projects/VRI_Rasterization/method2.tif'
tif_method3 <- 'D:/data/data_projects/VRI_Rasterization/method3.tif'
tif_method4 <- 'D:/data/data_projects/VRI_Rasterization/method4.tif'
tif_method5 <- 'D:/data/data_projects/VRI_Rasterization/tif_fasterize.tif'
r1 <- terra::rast(tif_method1)
# compare 1 to 4
r4 <- terra::rast(tif_method4)
c1 <- r1 - r4
c1[c1 != 0] <- 1
f3 <- terra::freq(c1)
f3
r2 <- terra::rast(tif_method2)
r4 <- terra::rast(tif_method4)
c1 <- r2 - r4
c1[c1 != 0] <- 1
f3 <- terra::freq(c1)
f3
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
tif_method2 <- 'D:/data/data_projects/VRI_Rasterization/method2.tif'
tif_method3 <- 'D:/data/data_projects/VRI_Rasterization/method3.tif'
tif_method4 <- 'D:/data/data_projects/VRI_Rasterization/method4.tif'
tif_method5 <- 'D:/data/data_projects/VRI_Rasterization/tif_fasterize.tif'
r3 <- terra::rast(tif_method3)
r5 <- terra::rast(tif_method5)
lst <- list(r1,r2,r3,r4,r5)
lst
terra::crs(r5) <- 'epsg:3005'
lst <- list(r1,r2,r3,r4,r5)
lst
raster_stack <-rast(lst)
raster_stack <-terra::rast(lst)
tif_brick <- 'D:/data/data_projects/VRI_Rasterization/tif_brick.tif'
writeRaster(raster_stack, tif_brick, datatype='INT4U', overwrite=TRUE)
terra::writeRaster(raster_stack, tif_brick, datatype='INT4U', overwrite=TRUE)
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
tif_method2 <- 'D:/data/data_projects/VRI_Rasterization/method2.tif'
tif_method3 <- 'D:/data/data_projects/VRI_Rasterization/method3.tif'
tif_method4 <- 'D:/data/data_projects/VRI_Rasterization/method4.tif'
tif_method5 <- 'D:/data/data_projects/VRI_Rasterization/tif_fasterize.tif'
tif_brick <- 'D:/data/data_projects/VRI_Rasterization/tif_brick.tif'
r1 <- terra::rast(tif_method1)
r5 <- terra::rast(tif_method5)
# force projection
terra::crs(r5) <- 'epsg:3005'
# land / water mask supplied by Mike F.
w1 <- paste0(substr(getwd(),1,1),':/data/data_projects/base_data/land_water.tif')
mask_raster <- terra::rast(w1)
# this mask is a 0/1 of land water
# there are values of 0 between Vancouver Island and the mainland.
# these need to be set to NA to be used as a land mask
# set values in mask to NA where 0
mask_raster[mask_raster==0] <- NA
terra::crs(mask_raster ) <- 'epsg:3005'
# apply the land mask to the base layer
# filter out the water
r1_masked <- terra::mask(r1,mask_raster)
# filter out any zeros
# set to NA
r1_masked[r1_masked==0] <- NA
r5_masked <- mask(r5,mask_raster)
r5_masked <- terra::mask(r5,mask_raster)
r5_masked[r5_masked==0] <- NA
# use absolutes
c5 <- abs(r1 - r5)
# where the difference is 1 assign 2
c5[c5 == 1] <- 1
# where there is a difference of more thatn 1
c5[c5 > 1 ] <- 2
f5 <- terra::freq(c5)
f5
library(RPostgreSQL)
getQuery<-function(sql){
conn<-DBI::dbConnect(dbDriver("PostgreSQL"),
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
st_read(conn, query = sql)
}
z <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
getQuery<-function(sql){
conn<-DBI::dbConnect(dbDriver("PostgreSQL"),
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
z <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
head(z)
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
r1 <- terra::rast(tif_method1)
values(r1)
x1 <- terra::values(r1)
head(x1)
class(x1)
x1 <- as.data.table(terra::values(r1))
x1 <- data.table::as.data.table(terra::values(r1))
head(x1)
x1[!is.na(x1),]
class(x1)
x1[!is.na(x1)]
library(data.table)
library(tidyverse)
x1 <- as.data.table(terra::values(r1)) %>% subste(!is.na(method1))
x1 <- as.data.table(terra::values(r1)) %>% subset(!is.na(method1))
head(x1)
names(x1) <- feature_id
names(x1) <- 'feature_id'
head(x1)
z1 <- count(x1,feature_id)
head(z1)
library(data.table)
library(tidyverse)
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
getQuery<-function(sql){
conn<-DBI::dbConnect(dbDriver("PostgreSQL"),
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
getQuery<-function(sql){
conn<-DBI::dbConnect(dbDriver("PostgreSQL"),
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
getQuery<-function(sql){
conn<-DBI::dbConnect("PostgreSQL",
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
getQuery<-function(sql){
conn <- dbConnect("PostgreSQL",
dbname='msyt',
user='postgres' ,
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
conn <- dbConnect("PostgreSQL",
dbname='msyt',
user='postgres'
)
library(data.table)
library(tidyverse)
library(RPostgreSQL)
getQuery<-function(sql){
conn <- dbConnect("PostgreSQL",
dbname='msyt',
user='postgres'
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp')
r1 <- terra::rast(tif_method1)
raster_base <- as.data.table(terra::values(r1)) %>% subset(!is.na(method1))
names(raster_base) <- 'feature_id'
raster_area <- count(raster_base,feature_id)
names(raster_area) <- c('feature_id','raster_area')
head(base_vri_area)
head(raster_area)
class(base_vri_area$feature_id)
class(base_vri_area$polygon_area)
class(raster_area$feature_id)
raster_area$feature_id <- as.integer(raster_area$feature_id)
class(raster_area$raster_area)
raster_area$raster_area <- as.numeric(raster_area$raster_area)
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp') %>% arrange(feature_id)
r1 <- terra::rast(tif_method1)
raster_base <- as.data.table(terra::values(r1)) %>% subset(!is.na(method1))
names(raster_base) <- 'feature_id'
raster_area <- count(raster_base,feature_id) %>% arrange(feature_id)
names(raster_area) <- c('feature_id','raster_area')
raster_area$feature_id <- as.integer(raster_area$feature_id)
raster_area$raster_area <- as.numeric(raster_area$raster_area)
compare <- left_join(base_vri_area,raster_area)
had(compare)
head(compare)
x1 <- compare[compare$polygon_area < 2 & is.na(compare$raster_area)]
head(compare)
x1 <- compare[compare$polygon_area < 2 & is.na(compare$raster_area),]
nrow(x1)
raster_null <- compare[compare$polygon_area < 2 & is.na(compare$raster_area),]
compare <- compare %>% susbet(~feature_id %in% raster_null$feature_id)
compare <- compare %>% subset(~feature_id %in% raster_null$feature_id)
compare <- compare %>% subset(feature_id %in% raster_null$feature_id)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
head(compare)
class(compare$polygon_area)
raster_null <- compare[compare$polygon_area < 2 & is.na(compare$raster_area),]
compare <- compare %>% subset(feature_id %in% raster_null$feature_id)
z <- compare[compare$polygon_area == compare$raster_area,]
nrow(z)
raster_equal <- compare[compare$polygon_area == compare$raster_area,]
compare <- compare %>% subset(feature_id %in% raster_equal$feature_id)
head(compare)
nrow(raster_base)
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
getQuery<-function(sql){
conn <- dbConnect("PostgreSQL",
dbname='msyt',
user='postgres'
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp') %>% arrange(feature_id)
r1 <- terra::rast(tif_method1)
raster_base <- as.data.table(terra::values(r1)) %>% subset(!is.na(method1))
names(raster_base) <- 'feature_id'
raster_area <- count(raster_base,feature_id) %>% arrange(feature_id)
# raster files
tif_method1 <- 'D:/data/data_projects/VRI_Rasterization/method1.tif'
getQuery<-function(sql){
conn <- dbConnect("PostgreSQL",
dbname='msyt',
user='postgres'
)
on.exit(dbDisconnect(conn))
sf::st_read(conn, query = sql)
}
base_vri_area <- getQuery('select feature_id,polygon_area from msyt_2022.veg_comp') %>% arrange(feature_id)
r1 <- terra::rast(tif_method1)
raster_base <- as.data.table(terra::values(r1)) %>% subset(!is.na(method1))
names(raster_base) <- 'feature_id'
raster_area <- count(raster_base,feature_id) %>% arrange(feature_id)
names(raster_area) <- c('feature_id','raster_area')
raster_area$feature_id <- as.integer(raster_area$feature_id)
# keep raster area as integer
# round vri area to integer
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
raster_null <- compare[compare$polygon_area < 2 & is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# where area is equal
raster_equal <- compare[compare$polygon_area == compare$raster_area,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
nrow(compare)
head(compare)
compare$diff <- abs(compare$polygon_area - compare$raster_area)
count(compare,diff)
compare[is.na(compare$diff,]
compare[is.na(compare$diff),]
z <- compare[is.na(compare$raster_area),]
nrow(z)
head(z)
count(z,polygon_area)
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
raster_equal <- compare[compare$polygon_area == compare$raster_area,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id | diff == 1)
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff == 1,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
nrow(compare)
count(compare(diff)
count(compare,diff)
head(compare)
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# where area is equal or difference is 1
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff == 1,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
head(compare)
count(compare,diff)
a1 <- sum(compare$polygon_area)
a2 <- sum(compare$raster_area)
a1
a2
(a1-a2)/a2 * 100
a1 <- sum(base_vri_area$polygon_area)
a1
a2 <- sum(raster_area$raster_area)
a2
(a1-a2)/a2 * 100
c1 <- count(compare,diff)
c1
p1 <- ggplot(aes(x=count,y=n)) +
geom_density()
class(c1)
p1 <- ggplot(c1,aes(x=count,y=n)) +
geom_density()
p1
p1 <- ggplot(c1,aes(x=diff,y=n)) +
geom_density()
p1
p1 <- ggplot(c1,aes(x=diff)) +
geom_density()
p1
c1
p1 <- ggplot(c1,aes(x=diff)) +
geom_density(aes(y=n))
p1
c1$source <- 'r1'
p1 <- ggplot(c1,aes(x=diff)) +
geom_density(aes(group=source,color=source),alpha=0.3)
p1
compare[compare$diff == 130,]
compare$diff2 <- compare$diff/compare$polygon_area*100
count(compare(diff2))
count(compare,diff2)
d_small <- compare %>% subset(diff2 < 1)
nrow(d_small)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
d_small <- compare %>% subset(diff2 < 2)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
count(compare,diff)
compare[compare$diff2 < 5,]
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
compare[compare$diff ==2,]
compare[compare$diff2=="1009957"]
compare[compare$diff2==1009957,]
compare[compare$diff2==100,]
d_small <- compare %>% subset(diff2 == 100 & poly_area < 4)
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
nrow(dsmall)
nrow(d_small)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
compare[compare$diff==2,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 3,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
compare[compare$diff == 4,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
c1 <- count(compare,diff)
c1
c1$source <- 'r1'
p1 <- ggplot(c1,aes(x=diff)) +
geom_density(aes(group=source,color=source),alpha=0.3)
p1
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
compare$diff <- abs(compare$polygon_area - compare$raster_area)
compare$diff2 <- compare$diff/compare$polygon_area*100
nrow(compare)
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 2 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
c1 <- count(compare,diff)
head(c1)
compare[compare$feature_id==1899638,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
compare[compare$feature_id==1899638,]
compare <- left_join(base_vri_area,raster_area)
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
#raster_null <- compare[compare$polygon_area <= 2 & is.na(compare$raster_area),]
raster_null <- compare[is.na(compare$raster_area),]
# remove the small NULLS
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area differnece as percentage of viri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 3
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 6,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 5 % difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
# remove where 100% diff and area small
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
compare <- left_join(base_vri_area,raster_area)
#round the polygon_area and cat to integer
compare$polygon_area <- as.integer(round(compare$polygon_area,0))
# remove the NULL on the raster side
# these are expected
raster_null <- compare[is.na(compare$raster_area),]
compare <- compare %>% subset(!feature_id %in% raster_null$feature_id)
# compute difference
compare$diff <- abs(compare$polygon_area - compare$raster_area)
# express area difference as percentage of vri area
compare$diff2 <- compare$diff/compare$polygon_area*100
# where area is equal or difference is < 2
raster_equal <- compare[compare$polygon_area == compare$raster_area | compare$diff < 3,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# where area is large and % diff < 5
raster_equal <- compare[compare$polygon_area > 100 | compare$diff2 < 5,]
compare <- compare %>% subset(!feature_id %in% raster_equal$feature_id)
# remove where < 5% difference based on area
d_small <- compare %>% subset(diff2 < 5)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
d_small <- compare %>% subset(diff2 == 100 & polygon_area < 4)
compare <- compare %>% subset(!feature_id %in% d_small$feature_id)
nrow(compare)
head(compare)
