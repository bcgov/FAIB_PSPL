library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
nrow(avg_fid_data)
setDT(avg_fid_data)
head(avg_fid_data)
cwi <- avg_fid_data %>% subset(cw_si ==0 & !bec_zone %in% c('CWH','CDF','MH'))
nrow(cwi)
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
# read avg_fid_data: table = pspl_fid_site_index_pre_convert
# this is the mean value feature_id data
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
si_test <- tail(avg_fid_data)
si_test
si_test <- si_convert(si_test)
source(si_convert, local = knitr::knit_global())
con
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
si_test
si_test_post <- si_convert(si_test)
si_test_post
si_test_post <- si_convert(si_test)
si_test_post
si_data <- si_test
si_test_post
si_data <- si_convert(si_test)
si_data
si_convert2 <- function(dt){
# si_conversions require 0 instead of NA
dt[is.na(dt)] <- 0
# add attribution to match how C handled things
# coast interior indicator
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
# Interior cwi
dt$cw_si[which(dt$cw_si==0 & dt$c_i == 'I')] <- convert_cwi(dt[which(dt$cw_si==0 & dt$c_i == 'I')])
return(dt)
}
si_test <- tail(avg_fid_data)
si2 <- si_convert2(si_test)
si2
dt <- si_test
setDT(dt)
dt[is.na(dt)] <- 0
dt
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
dt
which(dt$cw_si==0 & dt$c_i == 'I')
si_data
si_data <- si_convert(si_test)
si_data
convert_cwi <- function(x){
#  if (inp$cw_si == 0 & inp$sw_si != 0)
inp <- x
si <- case_when(
inp$sw_si != 0 ~ inp$sw_si,
TRUE ~ inp$cw_si)
return(si)
}
dt <- si_data
setDT(dt)
dt[is.na(dt)] <- 0
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
dt
dt$cw_si[which(dt$cw_si==0 & dt$c_i == 'I')] <- convert_cwi(dt[which(dt$cw_si==0 & dt$c_i == 'I')])
dt
si_data
si_test
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
si_test <- tail(avg_fid_data)
si_test <- tail(avg_fid_data)
si_post <- si_convert(si_test)
si_test
si_post
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
year <- '2022'
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
# pre-delete
if(dbExistsTable(con,'pspl_bec_site_index')) {
dbRemoveTable(con,'pspl_bec_site_index')
}
if(dbExistsTable(con,'pspl_fid_site_index')) {
dbRemoveTable(con,'pspl_fid_site_index')
}
if(dbExistsTable(con,'pspl_op_site_index')) {
dbRemoveTable(con,'pspl_op_site_index')
}
dbExecute(con,'alter table pspl_bec_site_index_post_convert rename to pspl_bec_site_index')
dbExecute(con,'alter table pspl_fid_site_index_post_convert rename to pspl_fid_site_index')
dbExecute(con,'alter table pspl_op_site_index_post_convert rename to pspl_op_site_index')
if(dbExistsTable(con,'pspl_fid_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_fid_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_op_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_op_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_bec_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_bec_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_init')) {
dbRemoveTable(con,'pspl_init')
}
if(dbExistsTable(con,'pspl_raw')) {
dbRemoveTable(con,'pspl_raw')
}
library(RPostgreSQL)
library(data.table)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'results'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name)
large_table <- fread('D:/data/data_projects/AR2022/PSPL/si_data/pspl_raw.csv',sep=',')
