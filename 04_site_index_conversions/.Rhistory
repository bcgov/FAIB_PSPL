library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
nrow(avg_fid_data)
setDT(avg_fid_data)
head(avg_fid_data)
cwi <- avg_fid_data %>% subset(cw_si ==0 & !bec_zone %in% c('CWH','CDF','MH'))
nrow(cwi)
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
# read avg_fid_data: table = pspl_fid_site_index_pre_convert
# this is the mean value feature_id data
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
si_test <- tail(avg_fid_data)
si_test
si_test <- si_convert(si_test)
source(si_convert, local = knitr::knit_global())
con
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
si_test
si_test_post <- si_convert(si_test)
si_test_post
si_test_post <- si_convert(si_test)
si_test_post
si_data <- si_test
si_test_post
si_data <- si_convert(si_test)
si_data
si_convert2 <- function(dt){
# si_conversions require 0 instead of NA
dt[is.na(dt)] <- 0
# add attribution to match how C handled things
# coast interior indicator
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
# Interior cwi
dt$cw_si[which(dt$cw_si==0 & dt$c_i == 'I')] <- convert_cwi(dt[which(dt$cw_si==0 & dt$c_i == 'I')])
return(dt)
}
si_test <- tail(avg_fid_data)
si2 <- si_convert2(si_test)
si2
dt <- si_test
setDT(dt)
dt[is.na(dt)] <- 0
dt
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
dt
which(dt$cw_si==0 & dt$c_i == 'I')
si_data
si_data <- si_convert(si_test)
si_data
convert_cwi <- function(x){
#  if (inp$cw_si == 0 & inp$sw_si != 0)
inp <- x
si <- case_when(
inp$sw_si != 0 ~ inp$sw_si,
TRUE ~ inp$cw_si)
return(si)
}
dt <- si_data
setDT(dt)
dt[is.na(dt)] <- 0
dt$c_i <- case_when(
dt$bec_zone == 'CWH' ~ 'C',
dt$bec_zone == 'CDF' ~ 'C',
dt$bec_zone == 'MH' ~ 'C',
TRUE ~ 'I'
)
dt
dt$cw_si[which(dt$cw_si==0 & dt$c_i == 'I')] <- convert_cwi(dt[which(dt$cw_si==0 & dt$c_i == 'I')])
dt
si_data
si_test
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
si_test <- tail(avg_fid_data)
si_test <- tail(avg_fid_data)
si_post <- si_convert(si_test)
si_test
si_post
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
year <- '2022'
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'postgres'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
# pre-delete
if(dbExistsTable(con,'pspl_bec_site_index')) {
dbRemoveTable(con,'pspl_bec_site_index')
}
if(dbExistsTable(con,'pspl_fid_site_index')) {
dbRemoveTable(con,'pspl_fid_site_index')
}
if(dbExistsTable(con,'pspl_op_site_index')) {
dbRemoveTable(con,'pspl_op_site_index')
}
dbExecute(con,'alter table pspl_bec_site_index_post_convert rename to pspl_bec_site_index')
dbExecute(con,'alter table pspl_fid_site_index_post_convert rename to pspl_fid_site_index')
dbExecute(con,'alter table pspl_op_site_index_post_convert rename to pspl_op_site_index')
if(dbExistsTable(con,'pspl_fid_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_fid_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_op_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_op_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_bec_site_index_pre_convert')) {
dbRemoveTable(con,'pspl_bec_site_index_pre_convert')
}
if(dbExistsTable(con,'pspl_init')) {
dbRemoveTable(con,'pspl_init')
}
if(dbExistsTable(con,'pspl_raw')) {
dbRemoveTable(con,'pspl_raw')
}
library(RPostgreSQL)
library(data.table)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'results'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name)
large_table <- fread('D:/data/data_projects/AR2022/PSPL/si_data/pspl_raw.csv',sep=',')
year <- '2022'
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'results'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
dbDisconnect(con)
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'results'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
q1 <- 'select *  from msyt_2022.pspl_fid_site_index_pre_convert'
avg_fid_data <- dbGetQuery(con,q1)
dbDisconnect(con)
year <- '2022'
library(RPostgreSQL)
library(tidyverse)
library(data.table)
library(ggplot2)
# set up for schema and user
schema <- 'msyt_2022'
opt <- paste0("-c search_path=",schema)
user_name <- 'results'
database <- 'msyt'
con <- dbConnect('PostgreSQL',dbname='msyt',user=user_name,options=opt)
#load the R code for site index conversions
si_convert <- paste0(getwd(),'/site_index_conversion_equations_v2.r')
source(si_convert, local = knitr::knit_global())
# read avg_BEC_data: table = psql_bec_site_index_pre_convert
q1 <- paste0('select *  from msyt_',year,'.pspl_site_index_pre_convert_bec')
r1 <- dbSendQuery(con,q1)
avg_BEC_data <- dbFetch(r1,n=-1)
setDT(avg_BEC_data)
avg_BEC_data <- si_convert(avg_BEC_data)
## Substitute for MHmmp
mm <- avg_BEC_data %>% subset(bec_zone == 'MH' & bec_subzone == 'mm')
avg_BEC_data <- avg_BEC_data %>% subset(paste0(bec_zone,bec_subzone) != 'MHmmp' )
mm$bec_subzone <- 'mmp'
avg_BEC_data <- rbind(avg_BEC_data,mm)
## substitute for SWB mk,mks,un
# delete the older data
# all SWB data is blank
avg_BEC_data <- avg_BEC_data %>% subset(bec_zone != 'SWB')
swb1 <- avg_BEC_data %>% subset(bec_zone == 'BWBS' & bec_subzone == 'dk')
swb1$bec_zone <- 'SWB'
swb1$bec_subzone <- 'mk'
swb2 <- swb1
swb3 <- swb1
swb2$bec_zone <- 'SWB'
swb2$bec_subzone <- 'mks'
swb3$bec_zone <- 'SWB'
swb3$bec_subzone <- 'un'
avg_BEC_data <- rbind(avg_BEC_data,swb1,swb2,swb3)
# write the data
file_name <- paste0(substr(getwd(),1,1),':/data/data_projects/AR',year,'/PSPL/si_data/pspl_site_index_bec.csv')
fwrite(avg_BEC_data, file_name, col.names=TRUE, row.names=FALSE, quote = FALSE, sep=",")
tbl_name <- paste0('pspl_site_index_bec')
# pre delete table
if(dbExistsTable(con,tbl_name)) {
dbRemoveTable(con,tbl_name)
}
# write to table
dbWriteTable(con,tbl_name,avg_BEC_data,row.names = FALSE)
# read avg_op_data: table = pspl_site_index_pre_convert_op
q1 <- 'select *  from msyt_2022.pspl_site_index_pre_convert_op'
avg_op_data <- dbGetQuery(con,q1)
setDT(avg_op_data)
# run the conversion
avg_op_data <- si_convert(avg_op_data)
# update from BEC
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), at_si := ifelse(at_si==0, i.at_si,at_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), ba_si := ifelse(ba_si==0, i.ba_si,ba_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), bg_si := ifelse(bg_si==0, i.bg_si,bg_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), bl_si := ifelse(bl_si==0, i.bl_si,bl_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), cw_si := ifelse(cw_si==0, i.cw_si,cw_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), dr_si := ifelse(dr_si==0, i.dr_si,dr_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), ep_si := ifelse(ep_si==0, i.ep_si,ep_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), fd_si := ifelse(fd_si==0, i.fd_si,fd_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), hm_si := ifelse(hm_si==0, i.hm_si,hm_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), hw_si := ifelse(hw_si==0, i.hw_si,hw_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), lt_si := ifelse(lt_si==0, i.lt_si,lt_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), lw_si := ifelse(lw_si==0, i.lw_si,lw_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), pa_si := ifelse(pa_si==0, i.pa_si,pa_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), pl_si := ifelse(pl_si==0, i.pl_si,pl_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), pw_si := ifelse(pw_si==0, i.pw_si,pw_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), py_si := ifelse(py_si==0, i.py_si,py_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), sb_si := ifelse(sb_si==0, i.sb_si,sb_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), se_si := ifelse(se_si==0, i.se_si,se_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), ss_si := ifelse(ss_si==0, i.ss_si,ss_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), sw_si := ifelse(sw_si==0, i.sw_si,sw_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), sx_si := ifelse(sx_si==0, i.sx_si,sx_si)]
avg_op_data[avg_BEC_data, on=c("bec_zone","bec_subzone"), yc_si := ifelse(yc_si==0, i.yc_si,yc_si)]
# add src
avg_op_data$si_src <- 'PSPL'
# writeout the post conversion file
file_name <-  paste0(substr(getwd(),1,1),':/data/data_projects/AR',year,'/PSPL/si_data/pspl_site_index_op.csv')
fwrite(avg_op_data, file_name, col.names=TRUE, row.names=FALSE, quote = FALSE, sep=",")
tbl_name <- paste0('pspl_site_index_op')
# pre delete table
if(dbExistsTable(con,tbl_name)) {
dbRemoveTable(con,tbl_name)
}
dbWriteTable(con,tbl_name,avg_op_data,row.names = FALSE)
# read avg_fid_data: table = pspl_site_index_pre_convert_fid
# this is the mean value feature_id data
q1 <- paste0('select *  from msyt_',year,'.pspl_site_index_pre_convert_fid')
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
# note that si_convert required 0 in place of NA
# si_convert will handle this
# run the SI conversions
avg_fid_data <- si_convert(avg_fid_data)
# read avg_fid_data: table = pspl_site_index_pre_convert_fid
# this is the mean value feature_id data
q1 <- paste0('select *  from msyt_',year,'.pspl_site_index_pre_convert_fid')
avg_fid_data <- dbGetQuery(con,q1)
setDT(avg_fid_data)
avg_fid_data <- si_convert(avg_fid_data)
x1 <- avg_fid_data %>% subset(featire_id %in% c(6171867, 6171929, 6171742, 6171657, 6171983, 6171632, 6171837, 6171666,6171824, 6171792))
x1 <- avg_fid_data %>% subset(feature_id %in% c(6171867, 6171929, 6171742, 6171657, 6171983, 6171632, 6171837, 6171666,6171824, 6171792))
x1
x1 <- x1 %>% select(feature_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone)
x1
x2 <- avg_op_data %>% subset(opening_id = -258070000) %>% select(opening_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone)
x2
x2 <- avg_op_data %>% subset(opening_id == -258070000) %>% select(opening_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone)
x2
x1
x2$opening_id <- -258070000
x1[x2, on=c("opening_id"), ba_si := ifelse(ba_si==0, i.ba_si,ba_si)]
x1
x1$opening_id <- -258070000
x1[x2, on=c("opening_id"), ba_si := ifelse(ba_si==0, i.ba_si,ba_si)]
x1
x1 <- avg_fid_data %>% subset(feature_id %in% c(6171867, 6171929, 6171742, 6171657, 6171983, 6171632, 6171837, 6171666,6171824, 6171792))
x1 <- x1 %>% select(feature_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone)
x1$opening_id <- -258070000
x2 <- avg_op_data %>% subset(opening_id == -258070000) %>% select(opening_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone)
x1
x1 <- avg_fid_data %>% subset(feature_id %in% c(6171867, 6171929, 6171742, 6171657, 6171983, 6171632, 6171837, 6171666,6171824, 6171792))
x1 <- x1 %>% select(feature_id, ba_si,fd_si,pl_si,se_si, bec_zone, bec_subzone) %>% arrange(bec_zone,bec_subzone)
x1$opening_id <- -258070000
x1
x1[x2, on=c("opening_id"), ba_si := ifelse(ba_si==0, i.ba_si,ba_si)]
x1
x1[x2, on=c("opening_id"), pl_si := ifelse(pl_si==0, i.pl_si,pl_si)]
x1
fid_op <- dbGetQuery(con,'select feature_id,opening_id from veg_comp where opening_id is not null and opening_id not in (0,-99)')
fid_op[fid_op$feature_id==6171632  ,]
avg_fid_data <- left_join(avg_fid_data,fid_op)
avg_op_data[avg_op_data$opening_id==-258070000,]
avg_fid_data[avg_fid_data$feature_id==6171632 ,]
avg_fid_data[avg_fid_data$feature_id==6171824 ,]
avg_fid_data[avg_op_data, on=c("opening_id"), at_si := ifelse(at_si==0, i.at_si,at_si)]
avg_fid_data[avg_fid_data$feature_id==6171824 ,]
avg_fid_data[avg_op_data, on=c("opening_id"), ba_si := ifelse(ba_si==0, i.ba_si,ba_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), bg_si := ifelse(bg_si==0, i.bg_si,bg_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), bl_si := ifelse(bl_si==0, i.bl_si,bl_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), cw_si := ifelse(cw_si==0, i.cw_si,cw_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), dr_si := ifelse(dr_si==0, i.dr_si,dr_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), ep_si := ifelse(ep_si==0, i.ep_si,ep_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), fd_si := ifelse(fd_si==0, i.fd_si,fd_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), hm_si := ifelse(hm_si==0, i.hm_si,hm_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), hw_si := ifelse(hw_si==0, i.hw_si,hw_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), lt_si := ifelse(lt_si==0, i.lt_si,lt_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), lw_si := ifelse(lw_si==0, i.lw_si,lw_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), pa_si := ifelse(pa_si==0, i.pa_si,pa_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), pl_si := ifelse(pl_si==0, i.pl_si,pl_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), pw_si := ifelse(pw_si==0, i.pw_si,pw_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), py_si := ifelse(py_si==0, i.py_si,py_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), sb_si := ifelse(sb_si==0, i.sb_si,sb_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), se_si := ifelse(se_si==0, i.se_si,se_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), ss_si := ifelse(ss_si==0, i.ss_si,ss_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), sw_si := ifelse(sw_si==0, i.sw_si,sw_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), sx_si := ifelse(sx_si==0, i.sx_si,sx_si)]
avg_fid_data[avg_op_data, on=c("opening_id"), yc_si := ifelse(yc_si==0, i.yc_si,yc_si)]
avg_fid_data[avg_fid_data$feature_id==6171824 ,]
